name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Get Release Info
        id: releaser
        run: |
          version=$(echo ${GITHUB_REF} | sed -e "s%refs/tags/%%g")
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Install and Build
        run: yarn && yarn build

      - name: Docker Meta
        id: meta
        run: |
          ACTION_IMAGE_NAME=$(echo $GITHUB_REPOSITORY | awk -F "/" '{print $2}')
          IMAGE_VERSION=v1.2.3
          IMAGE_NAME=${ACTION_IMAGE_NAMESPACE}/${ACTION_IMAGE_NAME}
          IMAGE_TAGS=${IMAGE_NAME}:v1,${IMAGE_NAME}:v1.2,${IMAGE_NAME}:v1.2.3
          echo "::set-output name=version::${IMAGE_VERSION}"
          echo "::set-output name=name::${IMAGE_NAME}"
          echo "::set-output name=tags::${IMAGE_TAGS}"
        shell: bash
        env:
          ACTION_IMAGE_NAMESPACE: zmicro-design

      - name: Test Docker Build
        uses: ./
        with:
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
          context: .
          # push: ${{ github.event_name != 'pull_request' }}
          # cache-from: type=registry,ref=${{ steps.meta.outputs.name }}:buildcache
          # cache-to: type=registry,ref=${{ steps.meta.outputs.name }}:buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64


      # Compile dist/index.js and bundle with action.yml
      # Force push major and minor tags, e.g. v1, v1.0
      # See documentation: https://github.com/JasonEtco/build-and-tag-action
      - uses: JasonEtco/build-and-tag-action@v2
        with:
          tag_name: ${{ steps.releaser.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
